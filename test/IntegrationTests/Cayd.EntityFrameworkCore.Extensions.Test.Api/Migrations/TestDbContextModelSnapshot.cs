#if NET8_0_OR_GREATER
// <auto-generated />
using System;
using System.Collections.Generic;
using Cayd.EntityFrameworkCore.Extensions.Test.Api.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cayd.EntityFrameworkCore.Extensions.Test.Api.Migrations
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cayd.EntityFrameworkCore.Extensions.Test.Api.Entities.TestChildEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IntValue")
                        .HasColumnType("integer");

                    b.Property<string>("StrValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TestParentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TestParentId");

                    b.ToTable("TestChildren");
                });

            modelBuilder.Entity("Cayd.EntityFrameworkCore.Extensions.Test.Api.Entities.TestCompositeEntity", b =>
                {
                    b.Property<int>("Id1")
                        .HasColumnType("integer");

                    b.Property<Guid>("Id2")
                        .HasColumnType("uuid");

                    b.Property<int>("IntValue")
                        .HasColumnType("integer");

                    b.Property<string>("StrValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id1", "Id2");

                    b.ToTable("TestComposites");
                });

            modelBuilder.Entity("Cayd.EntityFrameworkCore.Extensions.Test.Api.Entities.TestParentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IntValue")
                        .HasColumnType("integer");

                    b.Property<string>("StrValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ComplexProperty<Dictionary<string, object>>("ValueObject", "Cayd.EntityFrameworkCore.Extensions.Test.Api.Entities.TestParentEntity.ValueObject#TestValueObject", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("IntValue")
                                .HasColumnType("integer");

                            b1.Property<string>("StrValue")
                                .IsRequired()
                                .HasColumnType("text");
                        });

                    b.HasKey("Id");

                    b.ToTable("TestParents");
                });

            modelBuilder.Entity("Cayd.EntityFrameworkCore.Extensions.Test.Api.Entities.TestChildEntity", b =>
                {
                    b.HasOne("Cayd.EntityFrameworkCore.Extensions.Test.Api.Entities.TestParentEntity", "TestParent")
                        .WithMany("TestChildren")
                        .HasForeignKey("TestParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestParent");
                });

            modelBuilder.Entity("Cayd.EntityFrameworkCore.Extensions.Test.Api.Entities.TestParentEntity", b =>
                {
                    b.Navigation("TestChildren");
                });
#pragma warning restore 612, 618
        }
    }
}
#else
// <auto-generated />
using System;
using Cayd.EntityFrameworkCore.Extensions.Test.Api.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cayd.EntityFrameworkCore.Extensions.Test.Api.Migrations
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cayd.EntityFrameworkCore.Extensions.Test.Api.Entities.TestChildEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IntValue")
                        .HasColumnType("integer");

                    b.Property<string>("StrValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TestParentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TestParentId");

                    b.ToTable("TestChildren");
                });

            modelBuilder.Entity("Cayd.EntityFrameworkCore.Extensions.Test.Api.Entities.TestCompositeEntity", b =>
                {
                    b.Property<int>("Id1")
                        .HasColumnType("integer");

                    b.Property<Guid>("Id2")
                        .HasColumnType("uuid");

                    b.Property<int>("IntValue")
                        .HasColumnType("integer");

                    b.Property<string>("StrValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id1", "Id2");

                    b.ToTable("TestComposites");
                });

            modelBuilder.Entity("Cayd.EntityFrameworkCore.Extensions.Test.Api.Entities.TestParentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IntValue")
                        .HasColumnType("integer");

                    b.Property<string>("StrValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TestParents");
                });

            modelBuilder.Entity("Cayd.EntityFrameworkCore.Extensions.Test.Api.Entities.TestChildEntity", b =>
                {
                    b.HasOne("Cayd.EntityFrameworkCore.Extensions.Test.Api.Entities.TestParentEntity", "TestParent")
                        .WithMany("TestChildren")
                        .HasForeignKey("TestParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestParent");
                });

            modelBuilder.Entity("Cayd.EntityFrameworkCore.Extensions.Test.Api.Entities.TestParentEntity", b =>
                {
                    b.OwnsOne("Cayd.EntityFrameworkCore.Extensions.Test.Api.Entities.ValueObjects.TestValueObject", "ValueObject", b1 =>
                        {
                            b1.Property<int>("TestParentEntityId")
                                .HasColumnType("integer");

                            b1.Property<int>("IntValue")
                                .HasColumnType("integer");

                            b1.Property<string>("StrValue")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("TestParentEntityId");

                            b1.ToTable("TestParents");

                            b1.WithOwner()
                                .HasForeignKey("TestParentEntityId");
                        });

                    b.Navigation("ValueObject")
                        .IsRequired();
                });

            modelBuilder.Entity("Cayd.EntityFrameworkCore.Extensions.Test.Api.Entities.TestParentEntity", b =>
                {
                    b.Navigation("TestChildren");
                });
#pragma warning restore 612, 618
        }
    }
}
#endif
